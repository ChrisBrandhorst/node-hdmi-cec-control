"use strict"

var CecProto = {}
module.exports = CecProto

function reg(collection, id, name) {
  var code    = name.toUpperCase().replace(/\s\(?([\dA-Z]?)\)?/g, "_$1"),
      element = {id: id, code: code, name: name}
  CecProto[collection] = CecProto[collection] || {}
  CecProto[collection][id] = element
  CecProto[collection][code] = element
}

reg("Devices", "0", "TV")
reg("Devices", "1", "Recording 1")
reg("Devices", "2", "Recording 2")
reg("Devices", "3", "Tuner 1")
reg("Devices", "4", "Playback 1")
reg("Devices", "5", "Audio system")
reg("Devices", "6", "Tuner 2")
reg("Devices", "7", "Tuner 3")
reg("Devices", "8", "Playback 2")
reg("Devices", "9", "Playback 3")
reg("Devices", "A", "Tuner 4")
reg("Devices", "B", "Playback 3")
reg("Devices", "C", "Reserved (C)")
reg("Devices", "D", "Reserved (D)")
reg("Devices", "E", "Reserved (E)")
reg("Devices", "F", "Broadcast")

reg("DeviceTypes", "00", "TV")
reg("DeviceTypes", "01", "Recording Device")
reg("DeviceTypes", "02", "Reserved")
reg("DeviceTypes", "03", "Tuner")
reg("DeviceTypes", "04", "Playback Device")
reg("DeviceTypes", "05", "Audio System")

reg("MessageTypes", "FF", "Abort")
reg("MessageTypes", "82", "Active Source")
reg("MessageTypes", "9E", "CEC Version")
reg("MessageTypes", "33", "Clear Analogue Timer")
reg("MessageTypes", "99", "Clear Digital Timer")
reg("MessageTypes", "A1", "Clear External Timer")
reg("MessageTypes", "42", "Deck Control")
reg("MessageTypes", "1B", "Deck Status")
reg("MessageTypes", "87", "Device Vendor ID")
reg("MessageTypes", "00", "Feature Abort")
reg("MessageTypes", "9F", "Get CEC Version")
reg("MessageTypes", "91", "Get Menu Language")
reg("MessageTypes", "71", "Give Audio Status")
reg("MessageTypes", "1A", "Give Deck Status")
reg("MessageTypes", "8F", "Give Device Power Status")
reg("MessageTypes", "8C", "Give Device Vendor ID")
reg("MessageTypes", "46", "Give OSD Name")
reg("MessageTypes", "83", "Give Physical Address")
reg("MessageTypes", "7D", "Give System Audio Mode Status")
reg("MessageTypes", "08", "Give Tuner Device Status")
reg("MessageTypes", "04", "Image View On")
reg("MessageTypes", "9D", "Inactive Source")
reg("MessageTypes", "8D", "Menu Request")
reg("MessageTypes", "8E", "Menu Status")
reg("MessageTypes", "41", "Play")
reg("MessageTypes", "0B", "Record Off")
reg("MessageTypes", "09", "Record On")
reg("MessageTypes", "0A", "Record Status")
reg("MessageTypes", "0F", "Record TV Screen")
reg("MessageTypes", "7A", "Report Audio Status")
reg("MessageTypes", "84", "Report Physical Address")
reg("MessageTypes", "90", "Report Power Status")
reg("MessageTypes", "85", "Request Active Source")
reg("MessageTypes", "80", "Routing Change")
reg("MessageTypes", "81", "Routing Information")
reg("MessageTypes", "92", "Select Analogue Service")
reg("MessageTypes", "93", "Select Digital Service")
reg("MessageTypes", "34", "Set Analogue Timer")
reg("MessageTypes", "9A", "Set Audio Rate")
reg("MessageTypes", "97", "Set Digital Timer")
reg("MessageTypes", "A2", "Set External Timer")
reg("MessageTypes", "32", "Set Menu Language")
reg("MessageTypes", "47", "Set OSD Name")
reg("MessageTypes", "64", "Set OSD String")
reg("MessageTypes", "86", "Set Stream Path")
reg("MessageTypes", "72", "Set System Audio Mode")
reg("MessageTypes", "67", "Set Timer Program Title")
reg("MessageTypes", "36", "Standby")
reg("MessageTypes", "70", "System Audio Mode Request")
reg("MessageTypes", "7E", "System Audio Mode Status")
reg("MessageTypes", "0D", "Text View On")
reg("MessageTypes", "43", "Timer Cleared Status")
reg("MessageTypes", "35", "Timer Status")
reg("MessageTypes", "07", "Tuner Device Status")
reg("MessageTypes", "06", "Tuner Step Decrement")
reg("MessageTypes", "05", "Tuner Step Increment")
reg("MessageTypes", "44", "User Control Pressed")
reg("MessageTypes", "45", "User Control Released")
reg("MessageTypes", "89", "Vendor Command")
reg("MessageTypes", "A0", "Vendor Command With ID")
reg("MessageTypes", "8A", "Vendor Remote Button Down")
reg("MessageTypes", "8B", "Vendor Remote Button Up")
CecProto.MessageTypes.PollingMessage = { id: null, name: "Polling Message" }

reg("Vendors", "000039", "Toshiba")
reg("Vendors", "0000F0", "Samsung")
reg("Vendors", "0005CD", "Denon")
reg("Vendors", "000678", "Marantz")
reg("Vendors", "000982", "Loewe")
reg("Vendors", "0009B0", "Onkyo")
reg("Vendors", "000CB8", "Medion")
reg("Vendors", "000CE7", "Toshiba 2")
reg("Vendors", "001582", "Pulse Eight")
reg("Vendors", "001950", "Harman Kardon 2")
reg("Vendors", "001A11", "Google")
reg("Vendors", "0020C7", "Akai")
reg("Vendors", "002467", "AOC")
reg("Vendors", "008045", "Panasonic")
reg("Vendors", "00903E", "Philips")
reg("Vendors", "009053", "Daewoo")
reg("Vendors", "00A0DE", "Yamaha")
reg("Vendors", "00D0D5", "Grundig")
reg("Vendors", "00E036", "Pioneer")
reg("Vendors", "00E091", "LG")
reg("Vendors", "08001F", "Sharp")
reg("Vendors", "080046", "Sony")
reg("Vendors", "18C086", "Broadcom")
reg("Vendors", "534850", "Sharp 2")
reg("Vendors", "6B746D", "Vzio")
reg("Vendors", "8065E9", "Benq")
reg("Vendors", "9C645E", "Harman Kardon")
reg("Vendors", "000000", "Unknown")